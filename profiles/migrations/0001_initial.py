# Generated by Django 5.1.6 on 2025-04-03 12:40

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import profiles.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.UUIDField()),
                ('image', models.ImageField(upload_to='user_images/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'png', 'dcm']), profiles.models.validate_image_size])),
                ('caption', models.CharField(blank=True, max_length=255)),
                ('context', models.TextField(blank=True)),
                ('sensitivity_level', models.PositiveSmallIntegerField(choices=[(1, 'Public'), (2, 'Internal'), (3, 'Restricted')], default=2)),
                ('access_log', models.JSONField(default=list)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'User Images',
                'verbose_name_plural': 'User Images',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('customer', 'customer'), ('system_admin', 'System Administrator'), ('support', 'Support Staff')], db_index=True, default='customer', max_length=20)),
                ('status', models.CharField(choices=[('inactive', 'Inactive'), ('active', 'Active'), ('pending', 'Pending Verification'), ('suspended', 'Suspended'), ('archived', 'Archived')], db_index=True, default='inactive', max_length=20)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('non_binary', 'Non-binary'), ('undisclosed', 'Prefer not to say')], default='undisclosed', max_length=20)),
                ('address', models.JSONField(blank=True, null=True)),
                ('email', models.EmailField(db_index=True, max_length=255, unique=True)),
                ('phone_number', models.CharField(blank=True, help_text='International format: +[country code][number]', max_length=20, null=True, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$')])),
                ('terms_accepted_at', models.DateTimeField(blank=True, null=True)),
                ('privacy_policy_version', models.CharField(blank=True, max_length=20)),
                ('mfa_enabled', models.BooleanField(default=False)),
                ('token', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='users', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='user_permissions', to='auth.permission')),
                ('profile_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='profiles.userimage')),
            ],
            options={
                'verbose_name': 'Healthcare User',
                'verbose_name_plural': 'Healthcare Users',
                'permissions': [('view_full_profile', 'Can view complete user profile'), ('emergency_access', 'Has emergency access privileges')],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddIndex(
            model_name='userimage',
            index=models.Index(fields=['content_type', 'object_id'], name='profiles_us_content_b6b8ed_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['username', 'email'], name='profiles_us_usernam_45e603_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['role'], name='profiles_us_role_7e41dc_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['status'], name='profiles_us_status_b3fcd5_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['date_of_birth', 'gender'], name='profiles_us_date_of_de4df8_idx'),
        ),
    ]
